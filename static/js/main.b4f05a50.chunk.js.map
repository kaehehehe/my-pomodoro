{"version":3,"sources":["styles/button.js","components/PlayBtn.jsx","components/PauseBtn.jsx","styles/background.js","components/Modal.jsx","styles/timer.js","components/FiveMinutesTimer.jsx","components/Timer.jsx","components/Toggle.jsx","styles/theme.js","components/SettingBtn.jsx","components/DropdownMenu.jsx","components/SettingMenu.jsx","sounds/applause.mp3","components/Completed.jsx","components/RestartBtn.jsx","components/RestartModal.jsx","App.jsx","index.js"],"names":["Button","styled","button","theme","mainColor","StyledBtn","breakTime","PlayBtn","start","onClick","PauseBtn","setOpen","Background","div","Container","Card","modal","Text","span","Buttons","YesBtn","modalBtn","modalBtnText","NoBtn","Modal","reset","id","e","target","StyledTimer","Timer","FiveMinutesTimer","setBreakTime","useState","minutes","setMinutes","seconds","setSeconds","intervalRef","useRef","useEffect","TIME","current","setInterval","min","Math","floor","sec","clearInterval","TwentyFiveMinutesTimer","Message","isPaused","setIsPaused","open","useContext","GlobalContext","times","setTimes","setCompleted","timer","Toggle","setTheme","className","type","localStorage","setItem","lightTheme","baseColor","menu","dropdown","dropdownFont","dropdownHover","dropdownFontHover","darkTheme","GlobalStyles","createGlobalStyle","SettingBtn","setShowMenu","showMenu","Dropdown","TextBox","DefaultNum","Options","ul","showDropdown","DropdownMenu","setShowDropdown","handleOption","Menu","Name","SettingMenu","Completed","width","window","innerWidth","height","innerHeight","useSound","applause","volume","play","RestartBtn","getItem","RestartModal","createContext","App","currentTheme","selectedTimes","completed","Provider","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b4f05a50.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Button = styled.button`\n  font-size: 60px;\n  color: ${({ theme }) => theme.mainColor};\n  background-color: transparent;\n  height: 60px;\n`;\n","import React from 'react';\nimport { FaPlayCircle } from 'react-icons/fa';\nimport styled from 'styled-components';\nimport { Button } from '../styles/button';\n\nconst StyledBtn = styled(Button)`\n  display: ${({ breakTime }) => (breakTime ? 'none' : 'block')};\n`;\n\nconst PlayBtn = ({ start, breakTime }) => {\n  return (\n    <StyledBtn onClick={start} breakTime={breakTime}>\n      <FaPlayCircle />\n    </StyledBtn>\n  );\n};\n\nexport default PlayBtn;\n","import React from 'react';\nimport { FaPauseCircle } from 'react-icons/fa';\nimport styled from 'styled-components';\nimport { Button } from '../styles/button';\n\nconst StyledBtn = styled(Button)``;\n\nconst PauseBtn = ({ setOpen }) => {\n  return (\n    <StyledBtn onClick={() => setOpen(true)}>\n      <FaPauseCircle />\n    </StyledBtn>\n  );\n};\n\nexport default PauseBtn;\n","import styled from 'styled-components';\n\nexport const Background = styled.div`\n  height: 100vh;\n  width: 100vw;\n  position: fixed;\n  top: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.75);\n  z-index: 100;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Background } from '../styles/background';\n\nconst Container = styled(Background)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Card = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 420px;\n  padding: 18px;\n  margin: 0 15px;\n  border-radius: 8px;\n  align-items: center;\n  background-color: ${({ theme }) => theme.modal};\n`;\n\nconst Text = styled.span`\n  font-size: 35px;\n  margin-bottom: 15px;\n`;\n\nconst Buttons = styled.div`\n  display: flex;\n`;\n\nconst YesBtn = styled.button`\n  width: 70px;\n  height: 40px;\n  line-height: 45px;\n  font-size: 28px;\n  margin-right: 30px;\n  border-radius: 20px;\n  background-color: ${({ theme }) => theme.modalBtn};\n  color: ${({ theme }) => theme.modalBtnText};\n`;\n\nconst NoBtn = styled(YesBtn)`\n  margin-right: 0;\n`;\n\nconst Modal = ({ setOpen, reset }) => {\n  const handleClickBackground = (e) => {\n    if (e.target.id === 'bg') {\n      setOpen(false);\n    }\n  };\n\n  const handleYesBtn = () => {\n    reset();\n  };\n\n  const handleNoBtn = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Container id=\"bg\" onClick={handleClickBackground}>\n      <Card>\n        <Text>\n          벌써 그만두시나요?\n          <br />\n          포모도로 타이머는 25분 동안 집중하는 것이 원칙이기에 일시 정지 기능을\n          지원하지 않습니다.\n          <br />\n          타이머를 초기화하시겠습니까?😢\n        </Text>\n        <Buttons>\n          <YesBtn onClick={handleYesBtn}>네</YesBtn>\n          <NoBtn onClick={handleNoBtn}>아니요</NoBtn>\n        </Buttons>\n      </Card>\n    </Container>\n  );\n};\n\nexport default Modal;\n","import styled from 'styled-components';\n\nexport const StyledTimer = styled.div`\n  color: ${({ theme }) => theme.mainColor};\n  font-size: 120px;\n  text-align: center;\n  margin-bottom: 20px;\n`;\n","import React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { StyledTimer } from '../styles/timer';\n\nconst Timer = styled(StyledTimer)``;\n\nconst FiveMinutesTimer = ({ setBreakTime }) => {\n  const [minutes, setMinutes] = useState('05');\n  const [seconds, setSeconds] = useState('00');\n  const intervalRef = useRef(null);\n\n  useEffect(() => {\n    let TIME = 5 * 60 - 1;\n    intervalRef.current = setInterval(() => {\n      const min = Math.floor(TIME / 60);\n      const sec = TIME % 60;\n      TIME--;\n      setMinutes(min < 10 ? `0${min}` : min);\n      setSeconds(sec < 10 ? `0${sec}` : sec);\n      if (TIME === -1) {\n        clearInterval(intervalRef.current);\n        intervalRef.current = null;\n        setBreakTime(false);\n      }\n    }, 1000);\n  }, [setBreakTime]);\n\n  return <Timer>{`${minutes} : ${seconds}`}</Timer>;\n};\n\nexport default FiveMinutesTimer;\n","import React, { useState, useRef, useContext } from 'react';\nimport PlayBtn from './PlayBtn';\nimport PauseBtn from './PauseBtn';\nimport Modal from './Modal';\nimport styled from 'styled-components';\nimport { GlobalContext } from '../App';\nimport FiveMinutesTimer from './FiveMinutesTimer';\nimport { StyledTimer } from '../styles/timer';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`;\n\nconst TwentyFiveMinutesTimer = styled(StyledTimer)``;\n\nconst Message = styled.span`\n  margin-top: 30px;\n  color: ${({ theme }) => theme.mainColor};\n  font-size: 80px;\n`;\n\nconst Timer = () => {\n  const [isPaused, setIsPaused] = useState(true);\n  const [minutes, setMinutes] = useState('25');\n  const [seconds, setSeconds] = useState('00');\n  const [open, setOpen] = useState(false);\n  const [breakTime, setBreakTime] = useState(false);\n  const intervalRef = useRef(null);\n  const { times, setTimes, setCompleted } = useContext(GlobalContext);\n  let TIME = 25 * 60 - 1;\n\n  const timer = () => {\n    const min = Math.floor(TIME / 60);\n    const sec = TIME % 60;\n    TIME--;\n    setMinutes(min < 10 ? `0${min}` : min);\n    setSeconds(sec < 10 ? `0${sec}` : sec);\n  };\n\n  const start = () => {\n    setIsPaused(!isPaused);\n    intervalRef.current = setInterval(() => {\n      timer();\n      if (TIME === -1) {\n        clearInterval(intervalRef.current);\n        intervalRef.current = null;\n        setTimes(times - 1);\n        if (times === 1) {\n          setCompleted(true);\n        }\n        setMinutes('25');\n        setSeconds('00');\n        setIsPaused(true);\n        if (times === 1) {\n          return;\n        } else {\n          setBreakTime(true);\n        }\n      }\n    }, 1000);\n  };\n\n  const reset = () => {\n    setIsPaused(!isPaused);\n    clearInterval(intervalRef.current);\n    intervalRef.current = null;\n    setMinutes('25');\n    setSeconds('00');\n    setOpen(false);\n  };\n\n  return (\n    <>\n      {open && <Modal setOpen={setOpen} reset={reset} />}\n      <Container>\n        {breakTime ? (\n          <FiveMinutesTimer setBreakTime={setBreakTime} />\n        ) : (\n          <TwentyFiveMinutesTimer>{`${minutes} : ${seconds}`}</TwentyFiveMinutesTimer>\n        )}\n        {isPaused ? (\n          <PlayBtn start={start} breakTime={breakTime} />\n        ) : (\n          <PauseBtn setOpen={setOpen} />\n        )}\n        {breakTime ? (\n          <Message>휴식 시간입니다.</Message>\n        ) : (\n          <Message>앞으로 {times} 세트 더!</Message>\n        )}\n      </Container>\n    </>\n  );\n};\n\nexport default Timer;\n","import React from 'react';\nimport styled from 'styled-components';\nimport '../styles/toggle.css';\n\nconst Container = styled.div`\n  position: absolute;\n  top: 20px;\n  right: 20px;\n`;\n\nconst Toggle = ({ theme, setTheme }) => {\n  const handleToggle = () => {\n    if (theme === 'dark') {\n      setTheme('light');\n      localStorage.setItem('theme', 'light');\n    } else {\n      setTheme('dark');\n      localStorage.setItem('theme', 'dark');\n    }\n  };\n  return (\n    <Container>\n      <label className=\"toggle\">\n        <input type=\"checkbox\" />\n        <span className=\"slider\" onClick={handleToggle} />\n      </label>\n    </Container>\n  );\n};\n\nexport default Toggle;\n","import { createGlobalStyle } from 'styled-components';\n\nexport const lightTheme = {\n  baseColor: '#ede8dc',\n  mainColor: '#f37a8e',\n  modal: '#ede8dc',\n  modalBtn: '#f37a8e',\n  modalBtnText: '#ede8dc',\n  menu: '#ede8dc',\n  dropdown: '#f37a8e',\n  dropdownFont: '#ede8dc',\n  dropdownHover: '#ede8dc',\n  dropdownFontHover: '#f37a8e',\n};\n\nexport const darkTheme = {\n  baseColor: '#1c2128',\n  mainColor: '#9da7b2',\n  modal: '#9da7b2',\n  modalBtn: '#1c2128',\n  modalBtnText: '#9da7b2',\n  menu: '#9da7b2',\n  dropdown: '#1c2128',\n  dropdownFont: '#9da7b2',\n  dropdownHover: '#9da7b2',\n  dropdownFontHover: '#1c2128',\n};\n\nexport const GlobalStyles = createGlobalStyle`\n  body {\n    background-color: ${({ theme }) => theme.baseColor};\n  }\n`;\n","import React from 'react';\nimport { FiSettings } from 'react-icons/fi';\nimport styled from 'styled-components';\nimport { Button } from '../styles/button';\n\nconst StyledBtn = styled(Button)`\n  font-size: 30px;\n  height: 30px;\n  position: absolute;\n  top: 20px;\n  left: 20px;\n  transition: all 300ms ease;\n\n  &:hover {\n    transform: rotate(360deg);\n  }\n`;\n\nconst SettingBtn = ({ setShowMenu, showMenu }) => {\n  return (\n    <StyledBtn>\n      <FiSettings onClick={() => setShowMenu(!showMenu)} />\n    </StyledBtn>\n  );\n};\n\nexport default SettingBtn;\n","import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { FaAngleDown } from 'react-icons/fa';\nimport { FaAngleUp } from 'react-icons/fa';\nimport { GlobalContext } from '../App';\n\nconst Dropdown = styled.div`\n  position: relative;\n  width: 60px;\n  height: 50px;\n  cursor: pointer;\n`;\n\nconst TextBox = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  cursor: pointer;\n  padding: 0 12px;\n  border-radius: 10px;\n  background-color: ${({ theme }) => theme.dropdown};\n  color: ${({ theme }) => theme.dropdownFont};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 15px;\n`;\n\nconst DefaultNum = styled.div`\n  font-size: 35px;\n`;\n\nconst Options = styled.ul`\n  display: ${({ showDropdown }) => (showDropdown ? 'block' : 'none')};\n  position: absolute;\n  font-size: 35px;\n  top: 70px;\n  width: 100%;\n  height: auto;\n  background-color: ${({ theme }) => theme.dropdown};\n  color: ${({ theme }) => theme.dropdownFont};\n  border-radius: 10px;\n  list-style: none;\n  overflow: hidden;\n\n  li {\n    text-align: center;\n  }\n\n  li:hover {\n    opacity: 0.8;\n    background-color: ${({ theme }) => theme.dropdownHover};\n    color: ${({ theme }) => theme.dropdownFontHover};\n  }\n`;\n\nconst DropdownMenu = ({ showDropdown, setShowDropdown }) => {\n  const { times, setTimes } = useContext(GlobalContext);\n\n  const handleOption = (e) => {\n    switch (e.target.id) {\n      case '1':\n        setTimes(1);\n        setShowDropdown(false);\n        localStorage.setItem('times', 1);\n        break;\n      case '2':\n        setTimes(2);\n        setShowDropdown(false);\n        localStorage.setItem('times', 2);\n        break;\n      case '3':\n        setTimes(3);\n        setShowDropdown(false);\n        localStorage.setItem('times', 3);\n        break;\n      case '4':\n        setTimes(4);\n        setShowDropdown(false);\n        localStorage.setItem('times', 4);\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <Dropdown>\n      <TextBox onClick={() => setShowDropdown(!showDropdown)}>\n        <DefaultNum>{times}</DefaultNum>\n        {showDropdown ? <FaAngleUp /> : <FaAngleDown />}\n      </TextBox>\n      <Options showDropdown={showDropdown}>\n        <li id=\"1\" onClick={handleOption}>\n          1\n        </li>\n        <li id=\"2\" onClick={handleOption}>\n          2\n        </li>\n        <li id=\"3\" onClick={handleOption}>\n          3\n        </li>\n        <li id=\"4\" onClick={handleOption}>\n          4\n        </li>\n      </Options>\n    </Dropdown>\n  );\n};\n\nexport default DropdownMenu;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport DropdownMenu from './DropdownMenu';\nimport { Background } from '../styles/background';\n\nconst Menu = styled.div`\n  position: absolute;\n  top: 60px;\n  width: 300px;\n  height: 400px;\n  background-color: ${({ theme }) => theme.menu};\n  padding: 15px 20px;\n  display: flex;\n  justify-content: space-between;\n  border-radius: 10px;\n`;\n\nconst Name = styled.span`\n  font-size: 30px;\n`;\n\nconst SettingMenu = ({ setShowMenu }) => {\n  const [showDropdown, setShowDropdown] = useState(false);\n\n  const handleClickBackground = (e) => {\n    if (e.target.id === 'bg') {\n      setShowMenu(false);\n    }\n  };\n\n  const handleClickMenu = (e) => {\n    if (e.target.id === 'menu') {\n      setShowDropdown(false);\n    }\n  };\n\n  return (\n    <Background id=\"bg\" onClick={handleClickBackground}>\n      <Menu id=\"menu\" onClick={handleClickMenu}>\n        <Name>목표 세트 횟수</Name>\n        <DropdownMenu\n          showDropdown={showDropdown}\n          setShowDropdown={setShowDropdown}\n        />\n      </Menu>\n    </Background>\n  );\n};\n\nexport default SettingMenu;\n","export default __webpack_public_path__ + \"static/media/applause.3c735ade.mp3\";","import React, { useEffect } from 'react';\nimport Confetti from 'react-confetti';\nimport useSound from 'use-sound';\nimport applause from '../sounds/applause.mp3';\n\nconst Completed = () => {\n  const width = window.innerWidth;\n  const height = window.innerHeight;\n  const [play] = useSound(applause, { volume: 0.2 });\n\n  useEffect(() => {\n    play();\n  }, [play]);\n  return <Confetti width={width} height={height} />;\n};\n\nexport default Completed;\n","import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { Button } from '../styles/button';\nimport { VscDebugRestart } from 'react-icons/vsc';\nimport { GlobalContext } from '../App';\n\nconst StyledBtn = styled(Button)`\n  width: 60px;\n  height: 60px;\n  background-color: ${({ theme }) => theme.mainColor};\n  border-radius: 50%;\n  font-size: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: ${({ theme }) => theme.baseColor};\n  transition: all 250ms linear;\n  &:hover {\n    transform: rotate(90deg);\n  }\n`;\n\nconst RestartBtn = () => {\n  const { setCompleted, setTimes } = useContext(GlobalContext);\n\n  const handleRestartBtn = () => {\n    setCompleted(false);\n    setTimes(localStorage.getItem('times') ? localStorage.getItem('times') : 4);\n  };\n\n  return (\n    <StyledBtn>\n      <VscDebugRestart onClick={handleRestartBtn} />\n    </StyledBtn>\n  );\n};\n\nexport default RestartBtn;\n","import React from 'react';\nimport styled from 'styled-components';\nimport RestartBtn from './RestartBtn';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`;\n\nconst Message = styled.span`\n  margin-top: 30px;\n  color: ${({ theme }) => theme.mainColor};\n  font-size: 80px;\n`;\n\nconst RestartModal = () => {\n  return (\n    <Container>\n      <Message>목표 달성! 대단해요!</Message>\n      <RestartBtn />\n    </Container>\n  );\n};\n\nexport default RestartModal;\n","import React, { useState, createContext } from 'react';\nimport './App.css';\nimport Timer from './components/Timer';\nimport Toggle from './components/Toggle';\nimport { ThemeProvider } from 'styled-components';\nimport { lightTheme, darkTheme, GlobalStyles } from './styles/theme';\nimport SettingBtn from './components/SettingBtn';\nimport SettingMenu from './components/SettingMenu';\nimport Completed from './components/Completed';\nimport RestartModal from './components/RestartModal';\nexport const GlobalContext = createContext(null);\n\nconst App = () => {\n  const currentTheme = localStorage.getItem('theme') ? localStorage.getItem('theme') : 'dark';\n  const selectedTimes = localStorage.getItem('times') ? localStorage.getItem('times') : 4;\n  const [theme, setTheme] = useState(currentTheme);\n  const [showMenu, setShowMenu] = useState(false);\n  const [times, setTimes] = useState(selectedTimes);\n  const [completed, setCompleted] = useState(false);\n\n  return (\n    <ThemeProvider theme={theme === 'dark' ? darkTheme : lightTheme}>\n      <GlobalStyles />\n      <GlobalContext.Provider value={{ times, setTimes, setCompleted }}>\n        <SettingBtn setShowMenu={setShowMenu} showMenu={showMenu} />\n        {showMenu && <SettingMenu setShowMenu={setShowMenu} />}\n        {completed ? (\n          <>\n            <Completed /> <RestartModal />\n          </>\n        ) : (\n          <Timer />\n        )}\n        <Toggle setTheme={setTheme} theme={theme} />\n      </GlobalContext.Provider>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}